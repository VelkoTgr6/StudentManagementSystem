@model AllTeachersQueryModel
@{
    ViewBag.Title = "All Teachers";
}

<form method="get">
    <div class="d-flex justify-content-between align-items-center my-3">
        <a href="@Url.Action("Index", "AdminHome")" class="btn btn-secondary">Back</a>
        <h2 class="m-0 flex-grow-1 text-center">@ViewBag.Title</h2>
    </div>

    <hr />

    <div class="row align-items-end">
        <!-- Class Dropdown -->
        <div class="form-group col-md-3">
            <label>Course</label>
            <select name="Course" class="form-control">
                <option value="">Select Course</option>
                @foreach (var course in Model.Courses)
                {
                    <option value="@course">@course</option>
                }
            </select>
        </div>

        <!-- Search Term -->
        <div class="form-group col-md-3">
            <label>Search Term</label>
            <input name="SearchTerm" class="form-control" placeholder="Search...">
        </div>

        <!-- Sorting Dropdown -->
        <div class="form-group col-md-3">
            <label>Sorting</label>
            <select name="Sorting" class="form-control">
                <option value="0">Name</option>
                <option value="1">Course</option>
            </select>
        </div>

        <!-- Search Button -->
        <div class="form-group col-md-3">
            <input type="submit" value="Search" class="btn btn-primary" />
        </div>
    </div>

    <!-- Table -->
    <table class="table table-striped mt-3">
        <thead>
            <tr>
                <th>Titles</th>
                <th>Name</th>
                <th>School Name</th>
                <th>Course</th>
                <th>Email</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var teacher in Model.Teachers)
            {
                <tr>
                    <td>@teacher.Titles</td>
                    <td>@teacher.FirstName @teacher.LastName</td>
                    <td>@teacher.SchoolName</td>
                    <td>@teacher.Courses.Select(c=>c.Name).FirstOrDefault()</td>
                    <td>@teacher.Email</td>
                    <td>
                        <!-- Details Button -->
                        <a href="@Url.Action("DetailsTeacher", "AdminTeacher", new { id = teacher.Id })" class="btn btn-info btn-sm">Details</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Pagination -->
    <nav aria-label="Page navigation">
        <ul class="pagination">
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("AllTeachers", "AdminTeacher", new { currentPage = Model.CurrentPage - 1, Model.Sorting, Model.SearchTerm, Model.Course })" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("AllTeachers", "AdminTeacher", new { currentPage = i, Model.Sorting, Model.SearchTerm, Model.Course })">@i</a>
                </li>
            }
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("AllTeachers", "AdminTeacher", new { currentPage = Model.CurrentPage + 1, Model.Sorting, Model.SearchTerm, Model.Course })" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
    </div>
</form>
@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalTeachers / Model.TeachersPerPage);
}

@if (!Model.Teachers.Any())
{
    <h2 class="text-center">No Teachers found by the given criteria!</h2>
}