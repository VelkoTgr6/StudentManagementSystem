@model IEnumerable<StudentGradeServiceViewModel>
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

<div class="container mt-5">
    <div class="container mt-5">
        <div class="d-flex justify-content-between align-items-center">
            <!-- Back button aligned to the left -->
            <a href="@Url.Action("DetailsStudent", "AdminStudent", new { id = ViewBag.StudentId })" class="btn btn-secondary mb-3">Back to List</a>

            <!-- Centered Heading -->
            <h2 class="mx-auto mb-3 text-center">Student Grades</h2>
        </div>

    <!-- Search and Sort Section -->
    <form method="get" class="mb-4">
        <div class="row">
            <!-- Search by Name -->
            <div class="col-md-4">
                <input type="text" class="form-control" id="searchInput" placeholder="Search by Course name" onkeyup="searchCourses()" />
            </div>

            <!-- Sort Dropdown -->
            <div class="col-md-3">
                <select name="sort" class="form-control">
                    <option value="">Sort By</option>
                    <option value="name" selected="@(HttpContextAccessor.HttpContext.Request.Query["sort"] == "name" ? "selected" : "")">Name</option>
                    <option value="dateAdded" selected="@(HttpContextAccessor.HttpContext.Request.Query["sort"] == "dateAdded" ? "selected" : "")">Date Added</option>
                    </select>
            </div>

            <!-- Submit Button -->
            <div class="col-md-1">
                <button type="submit" class="btn btn-primary w-100">Search</button>
            </div>
        </div>
    </form>

    <!-- Grades Table -->
    <div class="table-responsive">
        <table class="table table-bordered table-sm table-striped mx-auto" id="gradesTable">
            <thead class="thead-dark">
                <tr>
                    <th>#</th>
                    <th class="text-center">Course Name</th>
                    <th class="text-center">Grade</th>
                    <th class="text-center">Grade Type</th>
                    <th class="text-center">Class Name</th>
                    <th class="text-center">Date Added</th>
                    <th class="text-center">Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (!Model.Any())
                {
                    <tr>
                        <td colspan="7" class="text-center text-muted">No grades found.</td>
                    </tr>
                }
                else
                {
                    @for (var i = 0; i < Model.Count(); i++)
                    {
                        <tr>
                            <td>@(i + 1)</td>
                            <td class="text-center">@Model.ElementAt(i).Name</td>
                            <td class="text-center">@Model.ElementAt(i).Grade</td>
                            <td class="text-center">@Model.ElementAt(i).GradeType</td>
                            <td class="text-center">@Model.ElementAt(i).ClassName</td>
                            <td class="text-center">@Model.ElementAt(i).DateAdded.ToString("dd.MM.yyyy")</td>
                            <td class="text-center">
                                <!-- Edit Button -->
                                <a class="btn btn-warning btn-sm" asp-action="EditGrade" asp-route-id="@Model.ElementAt(i).Id">
                                    Edit
                                </a>
                                <!-- Delete Button -->
                                <form method="post" asp-action="DeleteGrade" asp-route-id="@Model.ElementAt(i).Id" style="display:inline;" onsubmit="return confirm('Are you sure you want to delete this grade?');">
                                    <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                                </form>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Inline JavaScript for Filtering -->
<script>
    // Search function to filter rows by course name
    function searchCourses() {
        var input = document.getElementById("searchInput");
        var filter = input.value.toLowerCase();
        var table = document.getElementById("gradesTable");
        var tr = table.getElementsByTagName("tr");

        for (var i = 1; i < tr.length; i++) { // Skip the header row
            var td = tr[i].getElementsByTagName("td")[1]; // Target the Course Name column
            if (td) {
                var txtValue = td.textContent || td.innerText;
                if (txtValue.toLowerCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>
